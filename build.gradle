plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.noir74'
version = '1.0-SNAPSHOT'

ext {
    springBootVersion = '3.4.5'
    springDependencyManagementVersion = '1.1.7'
    lombokVersion = '1.18.32'
    mapstructVersion = '1.6.3'
    junitBomVersion = '5.10.0'
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'

    group = rootProject.group
    version = rootProject.version

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux'

        implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
        implementation 'org.postgresql:r2dbc-postgresql'

        implementation 'org.springframework.boot:spring-boot-starter-validation'

        compileOnly "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"

        implementation "org.mapstruct:mapstruct:${rootProject.ext.mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${rootProject.ext.mapstructVersion}"

        testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.mockito:mockito-junit-jupiter'
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs << "-parameters"
    }

    tasks.named('test') {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
}