plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

allprojects {
    group = 'ru.noir74'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")

        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'jakarta.validation:jakarta.validation-api'

        implementation "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationVersion}"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        configurations.configureEach {
            resolutionStrategy {
                force "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationVersion}"
            }
        }

        testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.mockito:mockito-junit-jupiter'
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs << "-parameters"
    }

    tasks.named('test') {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
}