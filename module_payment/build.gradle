import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id "org.openapi.generator"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("${project.projectDir}/src/main/resources/api-spec.yaml")
    outputDir.set("${project.projectDir}/build/generated")
    modelPackage.set("ru.noir74.shop.models")
    apiPackage.set("ru.noir74.shop.controllers")
    invokerPackage.set("ru.noir74.shop.clients")
    configOptions.set([
            hideGenerationTimestamp: "true",
            requestMappingMode: "controller",
            interfaceOnly: "false",
            library: "spring-boot",
            reactive: "true",
            useSpringBoot3: "true",
            useJakartaEe: "true",
            useTags: "false",
            dateLibrary: "java8",
            openApiNullable: "false",
            serializableModel: "true",
            returnSuccessCode: "true"
    ])
}


tasks.register('buildClient', GenerateTask) {
    generatorName.set("java")
    inputSpec.set("$projectDir/src/main/resources/api-spec.yaml")
    outputDir.set("$projectDir/build/generated")
    modelPackage.set("ru.noir74.shop.models")
    apiPackage.set("ru.noir74.shop.controllers")
    invokerPackage.set("ru.noir74.shop.clients")
    configOptions.set([
            hideGenerationTimestamp: "true",
            library                : "webclient",
            useJakartaEe           : "true",
            useTags                : "false",
            openApiNullable        : "false",
            serializableModel      : "true"
    ])
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    launchScript()
}

dependencies {
}

tasks.named('test') {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

tasks.named('compileJava') {
    dependsOn([tasks.openApiGenerate, tasks.buildClient])
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated'
        }
    }
}